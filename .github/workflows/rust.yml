name: Rust

on: push
env:
  llvm_version: 18.1.5

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      
    # steps
    steps:
      - uses: actions/checkout@v4
      - name: get-cmake
        uses: lukka/get-cmake@v3.29.2
      - uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Setup Python
        uses: actions/setup-python@v5.1.0
        with:
            cache: 'pip'
      - run: pip install setuptools
      # Build commands
      - name: build
        continue-on-error: true
        run: |
          cargo install --path .
          llvmenv init
          llvmenv build-entry -G Ninja -t Debug ${{ env.llvm_version }}
        # 
      - name: Find Windows Install
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          $env:INSTALL_PATH = $(llvmenv prefix)
        #
      - name: Find MacOS Install
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          export INSTALL_PATH = $(llvmenv prefix)
        #env:
        #  INSTALL_PATH: "/Users/runner/Library/Application Support/llvmenv/${{ env.llvm_version }}"
        #
      - name: Find Build Linux Install
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          export INSTALL_PATH = $(llvmenv prefix)
        
      - name: Upload a Build Artifact ${{ matrix.os }}
        uses: actions/upload-artifact@v4.3.3
        with:
          path: ${{ env.INSTALL_PATH }}
          retention-days: 40
          compression-level: 8
          overwrite: true

  check-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  check-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
